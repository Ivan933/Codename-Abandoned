<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Existing head content remains the same -->

    <style>
        /* Add to existing styles */
        #wallet-info {
            position: absolute;
            top: 20px;
            right: 20px;
            color: #fff;
            font-size: 14px;
            z-index: 1000;
        }

        #preloadContainer {
            /* Update preloader to include wallet UI */
            flex-direction: column;
            gap: 20px;
        }

        .wallet-prompt {
            color: #fff;
            text-align: center;
            font-size: 1.2em;
        }
    </style>
</head>
<body onload="onLoad()">
    <!-- Preloader with wallet connection -->
    <div id="preloadContainer">
        <img src="loading/HTMLImage_D852ACBA_C9D9_4C69_41C0_1FC9A930EF8A.gif" alt="Loading...">
        <p class="wallet-prompt">Connect your wallet to access the virtual tour</p>
        <button id="wallet-button">Connect Wallet</button>
    </div>

    <!-- Virtual Tour Viewer -->
    <div id="viewer"></div>

    <script>
        let player;
        let isInitialized = false;
        let isWalletConnected = false;

        // Modified initialization flow
        function onLoad() {
            // Only show wallet connection UI
            document.getElementById("wallet-button").onclick = connectWallet;
        }

        async function connectWallet() {
            if (typeof window.ethereum !== "undefined") {
                try {
                    const accounts = await window.ethereum.request({ 
                        method: "eth_requestAccounts" 
                    });
                    
                    // Store connection state
                    isWalletConnected = true;
                    console.log("✅ Wallet Connected:", accounts[0]);

                    // Show wallet info
                    const walletInfo = document.createElement("div");
                    walletInfo.id = "wallet-info";
                    walletInfo.textContent = `Connected: ${accounts[0].substring(0, 6)}...`;
                    document.body.appendChild(walletInfo);

                    // Start the tour after connection
                    initializeTour();

                } catch (error) {
                    console.error("❌ Wallet Connection Failed:", error);
                    alert("Wallet connection failed. Please try again.");
                }
            } else {
                alert("Please install MetaMask to access this content!");
            }
        }

        function initializeTour() {
            if (isInitialized) return;
            
            // Initialize tour
            const settings = new TDV.PlayerSettings();
            settings.set(TDV.PlayerSettings.CONTAINER, document.getElementById('viewer'));
            settings.set(TDV.PlayerSettings.SCRIPT_URL, 'script.js?v=1738683456665');
            settings.set(TDV.PlayerSettings.THREE_JS_WEBGL_URL, 'lib/ThreeWebGL.js');
            
            window.tdvplayer = player = TDV.PlayerAPI.create(settings);
            isInitialized = true;

            player.bind('stateChange', function(event) {
                if (event.name === 'begin') {
                    disposePreloader();
                }
            }, player, true);
        }

        function disposePreloader() {
            const preloadContainer = document.getElementById('preloadContainer');
            if (preloadContainer) {
                preloadContainer.style.opacity = "0";
                setTimeout(() => {
                    preloadContainer.style.display = "none";
                }, 500);
            }
        }
    </script>
</body>
</html>
