<!DOCTYPE html>
<html lang="en">
<head>
    <!-- Keep previous meta tags and libraries -->
    <style>
        /* Enhanced Eye Theme */
        #preloadContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: #000;
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            transition: opacity 1s ease;
        }

        #eyeAnimation {
            width: 70vh;
            height: 70vh;
            object-fit: contain;
            filter: contrast(1.2) brightness(0.9);
            animation: eye-scan 4s linear infinite;
        }

        /* Holographic Button Design */
        #wallet-button {
            position: absolute;
            bottom: 15%;
            left: 50%;
            transform: translateX(-50%);
            padding: 18px 45px;
            background: rgba(0, 0, 0, 0.3);
            color: #0ff;
            border: 2px solid #0ff;
            border-radius: 30px;
            font-family: 'Arial Narrow', sans-serif;
            font-size: 1.4em;
            letter-spacing: 3px;
            cursor: pointer;
            z-index: 10000;
            transition: all 0.4s ease;
            box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
            text-shadow: 0 0 10px rgba(0, 255, 255, 0.5);
        }

        #wallet-button:hover {
            background: rgba(0, 255, 255, 0.1);
            box-shadow: 0 0 30px rgba(0, 255, 255, 0.5);
            transform: translateX(-50%) scale(1.1);
        }

        @keyframes eye-scan {
            0% { filter: hue-rotate(0deg); }
            100% { filter: hue-rotate(360deg); }
        }

        /* Hidden until needed */
        #viewer {
            opacity: 0;
            transition: opacity 1s ease;
        }
    </style>
</head>
<body>
    <!-- Loading Screen -->
    <div id="preloadContainer">
        <img id="eyeAnimation" src="loading/HTMLImage_D852ACBA_C9D9_4C69_41C0_1FC9A930EF8A.gif" alt="Security Verification">
        <button id="wallet-button">INITIALIZE ACCESS</button>
    </div>

    <!-- Virtual Tour Viewer -->
    <div id="viewer"></div>

    <!-- Background Audio -->
    <audio id="ambienceAudio" loop>
        <source src="audio/ambience.mp3" type="audio/mpeg">
    </audio>

    <script>
        let player;
        let isInitialized = false;

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('wallet-button').onclick = async () => {
                try {
                    await authenticateWallet();
                    await initializeTourEnvironment();
                } catch (error) {
                    console.error('Access Denied:', error);
                    alert(`SYSTEM ERROR: ${error.message}`);
                }
            };
        });

        async function authenticateWallet() {
            if (!window.ethereum) throw new Error('No cryptographic interface detected');
            
            const accounts = await window.ethereum.request({ 
                method: 'eth_requestAccounts' 
            });

            // Request digital signature
            const signature = await window.ethereum.request({
                method: 'personal_sign',
                params: [
                    `ACCESS REQUEST:\n${Date.now()}\nVIRTUAL TOUR INITIATION`,
                    accounts[0]
                ]
            });

            return { account: accounts[0], signature };
        }

        async function initializeTourEnvironment() {
            // Fade out preloader elements
            document.getElementById('wallet-button').style.opacity = '0';
            document.getElementById('eyeAnimation').style.opacity = '0.5';

            // Initialize TDV Player
            if (!window.TDV) throw new Error('Virtual environment core missing');
            
            const settings = new TDV.PlayerSettings();
            settings.set(TDV.PlayerSettings.CONTAINER, document.getElementById('viewer'));
            settings.set(TDV.PlayerSettings.SCRIPT_URL, 'script.js?v=1738683456665');
            settings.set(TDV.PlayerSettings.THREE_JS_WEBGL_URL, 'lib/ThreeWebGL.js');

            window.tdvplayer = player = TDV.PlayerAPI.create(settings);
            
            // Start ambient audio
            const audioElement = document.getElementById('ambienceAudio');
            audioElement.play().catch(error => {
                console.warn('Audio autoplay blocked:', error);
            });

            // When tour is ready
            player.bind('stateChange', (event) => {
                if (event.name === 'begin') {
                    document.getElementById('preloadContainer').style.opacity = '0';
                    document.getElementById('viewer').style.opacity = '1';
                    
                    setTimeout(() => {
                        document.getElementById('preloadContainer').style.display = 'none';
                    }, 1000);
                }
            });
        }
    </script>
</body>
</html>

