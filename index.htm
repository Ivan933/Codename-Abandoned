<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="user-scalable=no, initial-scale=0.5, width=device-width, viewport-fit=cover">
    <title>Codename: Abandoned</title>

    <!-- Libraries -->
    <script src="lib/tdvplayer.js"></script>
    <script src="lib/ThreeWebGL.js"></script>
    <script src="script.js?v=1738683456665"></script>

    <style>
        /* Fullscreen Eye Loading Animation */
        #preloadContainer {
            position: fixed;
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            background: #000;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            z-index: 9999;
            transition: opacity 0.8s ease-in-out;
        }

        #eyeAnimation {
            width: 60vh;
            height: 60vh;
            object-fit: contain;
            filter: grayscale(100%);
            animation: eye-pulse 2s ease-in-out infinite;
        }

        /* Cyberpunk-style Wallet Button */
        #wallet-button {
            margin-top: 20px;
            padding: 15px 40px;
            background: transparent;
            color: #fff;
            border: 2px solid #fff;
            border-radius: 30px;
            font-family: 'Courier New', monospace;
            font-size: 1.4em;
            font-weight: bold;
            cursor: pointer;
            text-transform: uppercase;
            letter-spacing: 2px;
            text-shadow: 0 0 8px rgba(255, 255, 255, 0.5);
            transition: all 0.4s ease;
        }

        #wallet-button:hover {
            background: rgba(255, 255, 255, 0.1);
            box-shadow: 0 0 20px rgba(255, 255, 255, 0.4);
        }

        /* Panorama Viewer */
        #viewer {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            overflow: hidden;
            background: #000;
        }

        /* Fix for Fullscreen Black Screen */
        .fullscreen {
            width: 100vw !important;
            height: 100vh !important;
            background-color: #000 !important;
        }

        /* AI Ghost NPC */
        #ghost-npc {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            cursor: pointer;
            opacity: 0.8;
        }

        #ghost-dialogue-box {
            position: fixed;
            bottom: 20px;
            left: 50%;
            transform: translateX(-50%);
            background: rgba(0, 0, 0, 0.8);
            color: #fff;
            padding: 10px 15px;
            border-radius: 10px;
            display: none;
            font-family: 'Courier New', monospace;
            max-width: 80%;
            text-align: center;
        }

        @keyframes eye-pulse {
            0%, 100% { transform: scale(0.98); opacity: 0.9; }
            50% { transform: scale(1.02); opacity: 1; }
        }
    </style>
</head>
<body>
    <!-- Loading Screen -->
    <div id="preloadContainer">
        <img id="eyeAnimation" src="loading/HTMLImage_D852ACBA_C9D9_4C69_41C0_1FC9A930EF8A.gif" alt="Access Pending">
        <button id="wallet-button">Initialize Wallet Protocol</button>
    </div>

    <!-- Virtual Tour Viewer -->
    <div id="viewer"></div>

    <!-- AI Ghost NPC -->
    <img id="ghost-npc" src="ghost.png" width="100" alt="Ghost NPC">
    <div id="ghost-dialogue-box">
        <p id="ghost-dialogue">...</p>
    </div>

    <script>
        let player;
        let isInitialized = false;

        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('wallet-button').onclick = handleWalletConnection;
            document.addEventListener("fullscreenchange", handleFullScreenChange);
            document.getElementById("ghost-npc").addEventListener("click", interactWithGhost);
        });

        async function handleWalletConnection() {
            try {
                if (!window.ethereum && !window.WalletConnect) {
                    throw new Error('No crypto wallet detected');
                }
                const provider = window.ethereum || await setupWalletConnect();
                const accounts = await provider.request({ method: 'eth_requestAccounts' });
                await requestSignature(accounts[0]);
                if (!window.TDV) {
                    throw new Error('Virtual tour engine failed to load');
                }
                initializeTour();
                fadeOutPreloader();
            } catch (error) {
                alert(`Security Protocol Failed: ${error.message}`);
                console.error('Connection Error:', error);
            }
        }

        function initializeTour() {
            if (isInitialized) return;
            try {
                const settings = new TDV.PlayerSettings();
                settings.set(TDV.PlayerSettings.CONTAINER, document.getElementById('viewer'));
                settings.set(TDV.PlayerSettings.SCRIPT_URL, 'script.js?v=1738683456665');
                settings.set(TDV.PlayerSettings.THREE_JS_WEBGL_URL, 'lib/ThreeWebGL.js');
                window.tdvplayer = player = TDV.PlayerAPI.create(settings);
                isInitialized = true;
            } catch (error) {
                console.error('TDV Initialization Error:', error);
                alert('Virtual environment failed to initialize');
            }
        }

        function fadeOutPreloader() {
            const preloadContainer = document.getElementById('preloadContainer');
            if (preloadContainer) {
                preloadContainer.style.opacity = '0';
                setTimeout(() => {
                    preloadContainer.style.display = 'none';
                }, 800);
            }
        }

        function handleFullScreenChange() {
            const viewer = document.getElementById("viewer");
            if (document.fullscreenElement) {
                viewer.classList.add("fullscreen");
            } else {
                viewer.classList.remove("fullscreen");
            }
        }
    </script>
</body>
</html>

